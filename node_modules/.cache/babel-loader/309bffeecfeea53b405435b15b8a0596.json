{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Uporabnik\\\\Desktop\\\\macka_app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useRef, useState, useImperativeHandle, useCallback, useEffect } from 'react';\nimport { PageFlip } from 'page-flip';\nvar HTMLFlipBookForward = React.forwardRef(function (props, ref) {\n  var htmlElementRef = useRef(null);\n  var childRef = useRef([]);\n  var _pageFlip = useRef();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    pages = _useState2[0],\n    setPages = _useState2[1];\n  useImperativeHandle(ref, function () {\n    return {\n      pageFlip: function pageFlip() {\n        return _pageFlip.current;\n      }\n    };\n  });\n  var refreshOnPageDelete = useCallback(function () {\n    if (_pageFlip.current) {\n      _pageFlip.current.clear();\n    }\n  }, []);\n  var removeHandlers = useCallback(function () {\n    var flip = _pageFlip.current;\n    if (flip) {\n      flip.off('flip');\n      flip.off('changeOrientation');\n      flip.off('changeState');\n      flip.off('init');\n      flip.off('update');\n    }\n  }, []);\n  useEffect(function () {\n    childRef.current = [];\n    if (props.children) {\n      var childList = React.Children.map(props.children, function (child) {\n        return React.cloneElement(child, {\n          ref: function ref(dom) {\n            if (dom) {\n              childRef.current.push(dom);\n            }\n          }\n        });\n      });\n      if (!props.renderOnlyPageLengthChange || pages.length !== childList.length) {\n        if (childList.length < pages.length) {\n          refreshOnPageDelete();\n        }\n        setPages(childList);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.children]);\n  useEffect(function () {\n    var setHandlers = function setHandlers() {\n      var flip = _pageFlip.current;\n      if (flip) {\n        if (props.onFlip) {\n          flip.on('flip', function (e) {\n            return props.onFlip(e);\n          });\n        }\n        if (props.onChangeOrientation) {\n          flip.on('changeOrientation', function (e) {\n            return props.onChangeOrientation(e);\n          });\n        }\n        if (props.onChangeState) {\n          flip.on('changeState', function (e) {\n            return props.onChangeState(e);\n          });\n        }\n        if (props.onInit) {\n          flip.on('init', function (e) {\n            return props.onInit(e);\n          });\n        }\n        if (props.onUpdate) {\n          flip.on('update', function (e) {\n            return props.onUpdate(e);\n          });\n        }\n      }\n    };\n    if (pages.length > 0 && childRef.current.length > 0) {\n      removeHandlers();\n      if (htmlElementRef.current && !_pageFlip.current) {\n        _pageFlip.current = new PageFlip(htmlElementRef.current, props);\n      }\n      if (!_pageFlip.current.getFlipController()) {\n        _pageFlip.current.loadFromHTML(childRef.current);\n      } else {\n        _pageFlip.current.updateFromHtml(childRef.current);\n      }\n      setHandlers();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pages]);\n  return React.createElement(\"div\", {\n    ref: htmlElementRef,\n    className: props.className,\n    style: props.style\n  }, pages);\n});\nvar HTMLFlipBook = React.memo(HTMLFlipBookForward);\nexport default HTMLFlipBook;","map":null,"metadata":{},"sourceType":"module"}